<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="CHIAAutomata"><sessioninfo id="" start="1455026567215" dump="1455026568127"/><sessioninfo id="it.polimi.automata.transition.PropositionalLogicConstantsTest testCreatePropositionalLogicConstraints" start="1455026568132" dump="1455026568140"/><sessioninfo id="" start="1455026568156" dump="1455026568189"/><sessioninfo id="it.polimi.automata.state.StateFactoryTest testCreateString" start="1455026568193" dump="1455026568202"/><sessioninfo id="" start="1455026568206" dump="1455026568208"/><sessioninfo id="it.polimi.automata.state.StateFactoryTest testCreateString_Null" start="1455026568211" dump="1455026568225"/><sessioninfo id="" start="1455026568229" dump="1455026568230"/><sessioninfo id="it.polimi.automata.state.StateFactoryTest testCreateStringInt" start="1455026568235" dump="1455026568236"/><sessioninfo id="" start="1455026568239" dump="1455026568240"/><sessioninfo id="it.polimi.automata.state.StateFactoryTest testCreateNullInt" start="1455026568243" dump="1455026568244"/><sessioninfo id="" start="1455026568247" dump="1455026568248"/><sessioninfo id="it.polimi.automata.state.StateFactoryTest testCreateStringNegInt" start="1455026568252" dump="1455026568253"/><sessioninfo id="" start="1455026568256" dump="1455026568257"/><sessioninfo id="it.polimi.automata.state.StateFactoryTest testCreateVertex" start="1455026568260" dump="1455026568262"/><sessioninfo id="" start="1455026568265" dump="1455026568266"/><sessioninfo id="it.polimi.automata.state.StateFactoryTest testCreate" start="1455026568270" dump="1455026568271"/><sessioninfo id="" start="1455026568275" dump="1455026568298"/><sessioninfo id="it.polimi.automata.state.StateTest testClone" start="1455026568301" dump="1455026568307"/><sessioninfo id="" start="1455026568314" dump="1455026568322"/><sessioninfo id="it.polimi.automata.state.StateTest testToString" start="1455026568336" dump="1455026568338"/><sessioninfo id="" start="1455026568341" dump="1455026568342"/><sessioninfo id="it.polimi.automata.state.StateTest testStateConstructor" start="1455026568345" dump="1455026568347"/><sessioninfo id="" start="1455026568350" dump="1455026568351"/><sessioninfo id="it.polimi.automata.state.StateTest testStateConstuctor" start="1455026568355" dump="1455026568358"/><sessioninfo id="" start="1455026568361" dump="1455026568362"/><sessioninfo id="it.polimi.automata.state.StateTest testHashCode" start="1455026568365" dump="1455026568366"/><sessioninfo id="" start="1455026568369" dump="1455026568370"/><sessioninfo id="it.polimi.automata.state.StateTest testGetId" start="1455026568373" dump="1455026568374"/><sessioninfo id="" start="1455026568377" dump="1455026568378"/><sessioninfo id="it.polimi.automata.state.StateTest testGetName" start="1455026568381" dump="1455026568382"/><sessioninfo id="" start="1455026568385" dump="1455026568386"/><sessioninfo id="it.polimi.automata.state.StateTest testStateImplInt" start="1455026568390" dump="1455026568392"/><sessioninfo id="" start="1455026568395" dump="1455026568396"/><sessioninfo id="it.polimi.automata.state.StateTest testStateImplInt_NegativeNumber" start="1455026568400" dump="1455026568401"/><sessioninfo id="" start="1455026568404" dump="1455026568405"/><sessioninfo id="it.polimi.automata.state.StateTest testStateImplStringInt" start="1455026568409" dump="1455026568411"/><sessioninfo id="" start="1455026568414" dump="1455026568415"/><sessioninfo id="it.polimi.automata.state.StateTest testStateImplStringInt_null" start="1455026568419" dump="1455026568420"/><sessioninfo id="" start="1455026568423" dump="1455026568424"/><sessioninfo id="it.polimi.automata.state.StateTest testEqualsObject" start="1455026568429" dump="1455026568430"/><sessioninfo id="" start="1455026568433" dump="1455026568434"/><sessioninfo id="it.polimi.automata.state.StateTest testEqualsObject_Other" start="1455026568439" dump="1455026568440"/><sessioninfo id="" start="1455026568444" dump="1455026568448"/><sessioninfo id="it.polimi.automata.state.StateTest testEqualsObject_Same" start="1455026568453" dump="1455026568454"/><sessioninfo id="" start="1455026568457" dump="1455026568458"/><sessioninfo id="it.polimi.automata.state.StateTest testEqualsObject_Null" start="1455026568464" dump="1455026568465"/><sessioninfo id="" start="1455026568470" dump="1455026568493"/><sessioninfo id="it.polimi.automata.transition.ModelTransitionFactoryTest testCreateIntSetOfLABELNull" start="1455026568497" dump="1455026568557"/><sessioninfo id="" start="1455026568562" dump="1455026568586"/><sessioninfo id="it.polimi.automata.transition.ModelTransitionFactoryTest testCreateSetOfLABEL" start="1455026568636" dump="1455026568653"/><sessioninfo id="" start="1455026568657" dump="1455026568661"/><sessioninfo id="it.polimi.automata.transition.ModelTransitionFactoryTest testCreateIntSetOfLABEL" start="1455026568667" dump="1455026568671"/><sessioninfo id="" start="1455026568676" dump="1455026568677"/><sessioninfo id="it.polimi.automata.transition.ModelTransitionFactoryTest testCreateSetOfLABELNull" start="1455026568682" dump="1455026568683"/><sessioninfo id="" start="1455026568687" dump="1455026568688"/><sessioninfo id="it.polimi.automata.transition.ModelTransitionFactoryTest testCreateIntSetOfLABELIllegalArgument" start="1455026568692" dump="1455026568693"/><sessioninfo id="" start="1455026568697" dump="1455026568698"/><sessioninfo id="it.polimi.automata.transition.ModelTransitionFactoryTest testCreateSetOfLABELIllegal" start="1455026568702" dump="1455026568703"/><sessioninfo id="" start="1455026568708" dump="1455026568816"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreate[0]" start="1455026568820" dump="1455026568845"/><sessioninfo id="" start="1455026568889" dump="1455026568891"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNullModelState[0]" start="1455026568896" dump="1455026568897"/><sessioninfo id="" start="1455026568902" dump="1455026568904"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNullClaimState[0]" start="1455026568911" dump="1455026568914"/><sessioninfo id="" start="1455026568919" dump="1455026568920"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNumberHigherThanTwo[0]" start="1455026568926" dump="1455026568927"/><sessioninfo id="" start="1455026568932" dump="1455026568933"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNumberLowerThanZero[0]" start="1455026568937" dump="1455026568938"/><sessioninfo id="" start="1455026568943" dump="1455026568948"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreate[1]" start="1455026568953" dump="1455026568954"/><sessioninfo id="" start="1455026568958" dump="1455026568959"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNullModelState[1]" start="1455026568965" dump="1455026568968"/><sessioninfo id="" start="1455026568983" dump="1455026568984"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNullClaimState[1]" start="1455026568989" dump="1455026568990"/><sessioninfo id="" start="1455026569028" dump="1455026569030"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNumberHigherThanTwo[1]" start="1455026569035" dump="1455026569037"/><sessioninfo id="" start="1455026569057" dump="1455026569058"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNumberLowerThanZero[1]" start="1455026569083" dump="1455026569084"/><sessioninfo id="" start="1455026569090" dump="1455026569095"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreate[2]" start="1455026569099" dump="1455026569100"/><sessioninfo id="" start="1455026569104" dump="1455026569121"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNullModelState[2]" start="1455026569138" dump="1455026569143"/><sessioninfo id="" start="1455026569151" dump="1455026569152"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNullClaimState[2]" start="1455026569158" dump="1455026569160"/><sessioninfo id="" start="1455026569164" dump="1455026569165"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNumberHigherThanTwo[2]" start="1455026569169" dump="1455026569170"/><sessioninfo id="" start="1455026569175" dump="1455026569177"/><sessioninfo id="it.polimi.automata.state.IntersectionStateFactoryTest testCreateNumberLowerThanZero[2]" start="1455026569184" dump="1455026569184"/><sessioninfo id="" start="1455026569189" dump="1455026569514"/><sessioninfo id="it.polimi.automata.IBATest testIBAImpl" start="1455026569519" dump="1455026570412"/><sessioninfo id="" start="1455026570427" dump="1455026570428"/><sessioninfo id="it.polimi.automata.IBATest testIsBlackBoxStateNull" start="1455026570441" dump="1455026570453"/><sessioninfo id="" start="1455026570511" dump="1455026570513"/><sessioninfo id="it.polimi.automata.IBATest testIsBlackBoxStateIllegal" start="1455026570546" dump="1455026570618"/><sessioninfo id="" start="1455026570651" dump="1455026570654"/><sessioninfo id="it.polimi.automata.IBATest testIsBlackBoxState" start="1455026570669" dump="1455026570706"/><sessioninfo id="" start="1455026570719" dump="1455026570719"/><sessioninfo id="it.polimi.automata.IBATest testGetBlackBoxStateStates" start="1455026570732" dump="1455026570740"/><sessioninfo id="" start="1455026570753" dump="1455026570754"/><sessioninfo id="it.polimi.automata.IBATest testAddBlackBoxStateStateNull" start="1455026570780" dump="1455026570790"/><sessioninfo id="" start="1455026570807" dump="1455026570808"/><sessioninfo id="it.polimi.automata.IBATest testAddBlackBoxStateState" start="1455026570821" dump="1455026570830"/><sessioninfo id="" start="1455026570845" dump="1455026570846"/><sessioninfo id="it.polimi.automata.IBATest testClone" start="1455026570862" dump="1455026570876"/><sessioninfo id="" start="1455026570891" dump="1455026570892"/><sessioninfo id="it.polimi.automata.IBATest testGetRegularStates" start="1455026570905" dump="1455026570918"/><sessioninfo id="" start="1455026570932" dump="1455026570933"/><sessioninfo id="it.polimi.automata.IBATest testRemoveStateRegularState" start="1455026570947" dump="1455026570956"/><sessioninfo id="" start="1455026570971" dump="1455026570972"/><sessioninfo id="it.polimi.automata.IBATest testRemoveStateBlackBoxState" start="1455026570986" dump="1455026570998"/><sessioninfo id="" start="1455026571012" dump="1455026571013"/><sessioninfo id="it.polimi.automata.IBATest testToString" start="1455026571030" dump="1455026571053"/><sessioninfo id="" start="1455026571074" dump="1455026571095"/><sessioninfo id="it.polimi.automata.transition.ClaimTransitionFactoryTest testCreateIntSetOfLABELNull" start="1455026571108" dump="1455026571110"/><sessioninfo id="" start="1455026571135" dump="1455026571136"/><sessioninfo id="it.polimi.automata.transition.ClaimTransitionFactoryTest testCreateSetOfLABEL" start="1455026571149" dump="1455026571150"/><sessioninfo id="" start="1455026571164" dump="1455026571164"/><sessioninfo id="it.polimi.automata.transition.ClaimTransitionFactoryTest testCreateSetOfNull" start="1455026571180" dump="1455026571181"/><sessioninfo id="" start="1455026571194" dump="1455026571195"/><sessioninfo id="it.polimi.automata.transition.ClaimTransitionFactoryTest testCreateIntSetOfLABEL" start="1455026571209" dump="1455026571210"/><sessioninfo id="" start="1455026571222" dump="1455026571223"/><sessioninfo id="it.polimi.automata.transition.ClaimTransitionFactoryTest testCreateIntSetOfLABELNegativeNumber" start="1455026571235" dump="1455026571236"/><sessioninfo id="" start="1455026571250" dump="1455026571251"/><sessioninfo id="it.polimi.automata.transition.ClaimTransitionFactoryTest testCreate" start="1455026571263" dump="1455026571264"/><sessioninfo id="" start="1455026571278" dump="1455026571283"/><sessioninfo id="it.polimi.automata.transition.TransitionTest testToString" start="1455026571299" dump="1455026571309"/><sessioninfo id="" start="1455026571328" dump="1455026571330"/><sessioninfo id="it.polimi.automata.transition.TransitionTest testHashCode" start="1455026571344" dump="1455026571346"/><sessioninfo id="" start="1455026571359" dump="1455026571360"/><sessioninfo id="it.polimi.automata.transition.TransitionTest testGetId" start="1455026571373" dump="1455026571375"/><sessioninfo id="" start="1455026571390" dump="1455026571391"/><sessioninfo id="it.polimi.automata.transition.TransitionTest testTransition_NoParamConstructor" start="1455026571404" dump="1455026571406"/><sessioninfo id="" start="1455026571419" dump="1455026571420"/><sessioninfo id="it.polimi.automata.transition.TransitionTest testTransition_Null" start="1455026571437" dump="1455026571439"/><sessioninfo id="" start="1455026571454" dump="1455026571456"/><sessioninfo id="it.polimi.automata.transition.TransitionTest testTransition_Neg" start="1455026571477" dump="1455026571482"/><sessioninfo id="" start="1455026571499" dump="1455026571500"/><sessioninfo id="it.polimi.automata.transition.TransitionTest testGetLabels" start="1455026571521" dump="1455026571523"/><sessioninfo id="" start="1455026571619" dump="1455026571620"/><sessioninfo id="it.polimi.automata.transition.TransitionTest testToStringEmpty" start="1455026571644" dump="1455026571646"/><sessioninfo id="" start="1455026571669" dump="1455026571670"/><sessioninfo id="it.polimi.automata.transition.TransitionTest testEquals" start="1455026571725" dump="1455026571730"/><sessioninfo id="" start="1455026571748" dump="1455026571776"/><sessioninfo id="it.polimi.automata.BATest testBAImpl" start="1455026571796" dump="1455026571800"/><sessioninfo id="" start="1455026571861" dump="1455026571863"/><sessioninfo id="it.polimi.automata.BATest testAddProposition" start="1455026571883" dump="1455026571891"/><sessioninfo id="" start="1455026571907" dump="1455026571908"/><sessioninfo id="it.polimi.automata.BATest testGetPropositions" start="1455026571923" dump="1455026571941"/><sessioninfo id="" start="1455026571971" dump="1455026571972"/><sessioninfo id="it.polimi.automata.BATest testGetInitialStates" start="1455026571990" dump="1455026571995"/><sessioninfo id="" start="1455026572015" dump="1455026572016"/><sessioninfo id="it.polimi.automata.BATest testGetStates" start="1455026572029" dump="1455026572092"/><sessioninfo id="" start="1455026572106" dump="1455026572107"/><sessioninfo id="it.polimi.automata.BATest testGetAcceptStates" start="1455026572157" dump="1455026572165"/><sessioninfo id="" start="1455026572180" dump="1455026572181"/><sessioninfo id="it.polimi.automata.BATest testGetAlphabet" start="1455026572244" dump="1455026572254"/><sessioninfo id="" start="1455026572268" dump="1455026572270"/><sessioninfo id="it.polimi.automata.BATest testGetOutTransitions" start="1455026572287" dump="1455026572294"/><sessioninfo id="" start="1455026572311" dump="1455026572312"/><sessioninfo id="it.polimi.automata.BATest testGetInTransitions" start="1455026572360" dump="1455026572378"/><sessioninfo id="" start="1455026572397" dump="1455026572398"/><sessioninfo id="it.polimi.automata.BATest testGetTransitionDestination" start="1455026572419" dump="1455026572424"/><sessioninfo id="" start="1455026572440" dump="1455026572442"/><sessioninfo id="it.polimi.automata.BATest testGetTransitionSource" start="1455026572487" dump="1455026572505"/><sessioninfo id="" start="1455026572523" dump="1455026572523"/><sessioninfo id="it.polimi.automata.BATest testGetTransitions" start="1455026572541" dump="1455026572547"/><sessioninfo id="" start="1455026572560" dump="1455026572572"/><sessioninfo id="it.polimi.automata.BATest testAddInitialStateNull" start="1455026572593" dump="1455026572604"/><sessioninfo id="" start="1455026572617" dump="1455026572618"/><sessioninfo id="it.polimi.automata.BATest testAddInitialState" start="1455026572634" dump="1455026572640"/><sessioninfo id="" start="1455026572654" dump="1455026572656"/><sessioninfo id="it.polimi.automata.BATest testAddAcceptStateNull" start="1455026572683" dump="1455026572696"/><sessioninfo id="" start="1455026572709" dump="1455026572712"/><sessioninfo id="it.polimi.automata.BATest testAddAcceptState" start="1455026572729" dump="1455026572736"/><sessioninfo id="" start="1455026572753" dump="1455026572754"/><sessioninfo id="it.polimi.automata.BATest testAddStateNull" start="1455026572767" dump="1455026572771"/><sessioninfo id="" start="1455026572784" dump="1455026572785"/><sessioninfo id="it.polimi.automata.BATest testAddState" start="1455026572802" dump="1455026572812"/><sessioninfo id="" start="1455026572828" dump="1455026572830"/><sessioninfo id="it.polimi.automata.BATest testAddStateAlreadyContainedState" start="1455026572844" dump="1455026572847"/><sessioninfo id="" start="1455026572858" dump="1455026572859"/><sessioninfo id="it.polimi.automata.BATest testGetPredecessorsNullState" start="1455026572867" dump="1455026572870"/><sessioninfo id="" start="1455026572879" dump="1455026572880"/><sessioninfo id="it.polimi.automata.BATest testGetPredecessorsNotContainedState" start="1455026572888" dump="1455026572891"/><sessioninfo id="" start="1455026572900" dump="1455026572900"/><sessioninfo id="it.polimi.automata.BATest testGetPredecessors" start="1455026572908" dump="1455026572920"/><sessioninfo id="" start="1455026572935" dump="1455026572936"/><sessioninfo id="it.polimi.automata.BATest testGetPredecessorNullSourceState" start="1455026572949" dump="1455026572954"/><sessioninfo id="" start="1455026572966" dump="1455026572967"/><sessioninfo id="it.polimi.automata.BATest testGetPredecessorNullDestinationState" start="1455026572975" dump="1455026572979"/><sessioninfo id="" start="1455026572987" dump="1455026572990"/><sessioninfo id="it.polimi.automata.BATest testGetPredecessorNotContainedSourceState" start="1455026573000" dump="1455026573002"/><sessioninfo id="" start="1455026573012" dump="1455026573012"/><sessioninfo id="it.polimi.automata.BATest testGetPredecessorNotContainedDestinationState" start="1455026573024" dump="1455026573030"/><sessioninfo id="" start="1455026573045" dump="1455026573048"/><sessioninfo id="it.polimi.automata.BATest testGetPredecessor" start="1455026573062" dump="1455026573068"/><sessioninfo id="" start="1455026573080" dump="1455026573080"/><sessioninfo id="it.polimi.automata.BATest testGetSuccessorsNullState" start="1455026573088" dump="1455026573093"/><sessioninfo id="" start="1455026573102" dump="1455026573102"/><sessioninfo id="it.polimi.automata.BATest testGetSuccessorsNotContainedState" start="1455026573113" dump="1455026573119"/><sessioninfo id="" start="1455026573133" dump="1455026573134"/><sessioninfo id="it.polimi.automata.BATest testGetSuccessors" start="1455026573144" dump="1455026573149"/><sessioninfo id="" start="1455026573161" dump="1455026573163"/><sessioninfo id="it.polimi.automata.BATest testAddCharactersNull" start="1455026573176" dump="1455026573184"/><sessioninfo id="" start="1455026573198" dump="1455026573199"/><sessioninfo id="it.polimi.automata.BATest testAddCharacters" start="1455026573208" dump="1455026573214"/><sessioninfo id="" start="1455026573231" dump="1455026573232"/><sessioninfo id="it.polimi.automata.BATest testAddTransitionSourceNull" start="1455026573247" dump="1455026573253"/><sessioninfo id="" start="1455026573267" dump="1455026573268"/><sessioninfo id="it.polimi.automata.BATest testAddTransitionDestinationNull" start="1455026573282" dump="1455026573287"/><sessioninfo id="" start="1455026573302" dump="1455026573303"/><sessioninfo id="it.polimi.automata.BATest testAddTransitionTransitionNull" start="1455026573317" dump="1455026573321"/><sessioninfo id="" start="1455026573335" dump="1455026573335"/><sessioninfo id="it.polimi.automata.BATest testAddTransitionSourceNotPresent" start="1455026573348" dump="1455026573353"/><sessioninfo id="" start="1455026573365" dump="1455026573367"/><sessioninfo id="it.polimi.automata.BATest testAddTransitionAlreadyPresent" start="1455026573379" dump="1455026573381"/><sessioninfo id="" start="1455026573390" dump="1455026573391"/><sessioninfo id="it.polimi.automata.BATest testAddTransitionDestinationNotPresent" start="1455026573402" dump="1455026573405"/><sessioninfo id="" start="1455026573414" dump="1455026573414"/><sessioninfo id="it.polimi.automata.BATest testAddTransitionLabeledWithNegatedPropositions" start="1455026573424" dump="1455026573428"/><sessioninfo id="" start="1455026573438" dump="1455026573439"/><sessioninfo id="it.polimi.automata.BATest testAddTransition_LabeledWithNegatedPropositions" start="1455026573447" dump="1455026573451"/><sessioninfo id="" start="1455026573459" dump="1455026573459"/><sessioninfo id="it.polimi.automata.BATest testAddTransitionCharacterNotContained" start="1455026573467" dump="1455026573470"/><sessioninfo id="" start="1455026573479" dump="1455026573480"/><sessioninfo id="it.polimi.automata.BATest testAddTransitionCharacterNotContained2" start="1455026573488" dump="1455026573491"/><sessioninfo id="" start="1455026573501" dump="1455026573502"/><sessioninfo id="it.polimi.automata.BATest testAddTransition" start="1455026573511" dump="1455026573516"/><sessioninfo id="" start="1455026573530" dump="1455026573531"/><sessioninfo id="it.polimi.automata.BATest testRemoveStateNull" start="1455026573542" dump="1455026573546"/><sessioninfo id="" start="1455026573556" dump="1455026573557"/><sessioninfo id="it.polimi.automata.BATest testRemoveStateIllegal" start="1455026573569" dump="1455026573572"/><sessioninfo id="" start="1455026573581" dump="1455026573582"/><sessioninfo id="it.polimi.automata.BATest testRemoveState" start="1455026573591" dump="1455026573597"/><sessioninfo id="" start="1455026573606" dump="1455026573606"/><sessioninfo id="it.polimi.automata.BATest testRemoveTransitionNull" start="1455026573615" dump="1455026573618"/><sessioninfo id="" start="1455026573626" dump="1455026573627"/><sessioninfo id="it.polimi.automata.BATest testRemoveTransitionIllegalTransition" start="1455026573634" dump="1455026573637"/><sessioninfo id="" start="1455026573649" dump="1455026573650"/><sessioninfo id="it.polimi.automata.BATest testRemoveTransition" start="1455026573661" dump="1455026573663"/><sessioninfo id="" start="1455026573672" dump="1455026573673"/><sessioninfo id="it.polimi.automata.BATest testRemoveAcceptingStateNull" start="1455026573691" dump="1455026573694"/><sessioninfo id="" start="1455026573702" dump="1455026573702"/><sessioninfo id="it.polimi.automata.BATest testRemoveAcceptingStateIllegalArgument" start="1455026573710" dump="1455026573714"/><sessioninfo id="" start="1455026573727" dump="1455026573728"/><sessioninfo id="it.polimi.automata.BATest testRemoveAcceptingState" start="1455026573736" dump="1455026573740"/><sessioninfo id="" start="1455026573749" dump="1455026573750"/><sessioninfo id="it.polimi.automata.BATest testRemoveInitialStateNull" start="1455026573757" dump="1455026573761"/><sessioninfo id="" start="1455026573772" dump="1455026573773"/><sessioninfo id="it.polimi.automata.BATest testRemoveInitialStateIllegal" start="1455026573785" dump="1455026573799"/><sessioninfo id="" start="1455026573811" dump="1455026573812"/><sessioninfo id="it.polimi.automata.BATest testRemoveInitialState" start="1455026573821" dump="1455026573825"/><sessioninfo id="" start="1455026573834" dump="1455026573835"/><sessioninfo id="it.polimi.automata.BATest testGetGraph" start="1455026573845" dump="1455026573854"/><sessioninfo id="" start="1455026573867" dump="1455026573868"/><sessioninfo id="it.polimi.automata.BATest testGetTransitionFactory" start="1455026573883" dump="1455026573887"/><sessioninfo id="" start="1455026573903" dump="1455026573906"/><sessioninfo id="it.polimi.automata.BATest testToString" start="1455026573925" dump="1455026573933"/><sessioninfo id="" start="1455026573945" dump="1455026573946"/><sessioninfo id="it.polimi.automata.BATest testAddClone" start="1455026573954" dump="1455026573967"/><sessioninfo id="" start="1455026573976" dump="1455026573977"/><sessioninfo id="it.polimi.automata.BATest testAddStutteringNullState" start="1455026573991" dump="1455026573995"/><sessioninfo id="" start="1455026574007" dump="1455026574008"/><sessioninfo id="it.polimi.automata.BATest testAddStutteringNotContainedState" start="1455026574019" dump="1455026574024"/><sessioninfo id="" start="1455026574037" dump="1455026574038"/><sessioninfo id="it.polimi.automata.BATest testAddStuttering" start="1455026574052" dump="1455026574055"/><sessioninfo id="" start="1455026574064" dump="1455026574065"/><sessioninfo id="it.polimi.automata.BATest testSize" start="1455026574073" dump="1455026574075"/><sessioninfo id="" start="1455026574084" dump="1455026574105"/><sessioninfo id="it.polimi.automata.IntersectionBATest testClone" start="1455026574119" dump="1455026574125"/><sessioninfo id="" start="1455026574141" dump="1455026574142"/><sessioninfo id="it.polimi.automata.IntersectionBATest testAddState" start="1455026574154" dump="1455026574156"/><sessioninfo id="" start="1455026574173" dump="1455026574174"/><sessioninfo id="it.polimi.automata.IntersectionBATest testRemoveTransition" start="1455026574185" dump="1455026574207"/><sessioninfo id="" start="1455026574218" dump="1455026574223"/><sessioninfo id="it.polimi.automata.IntersectionBATest testToString" start="1455026574241" dump="1455026574244"/><sessioninfo id="" start="1455026574257" dump="1455026574258"/><sessioninfo id="it.polimi.automata.IntersectionBATest testIntBAImpl" start="1455026574269" dump="1455026574272"/><sessioninfo id="" start="1455026574284" dump="1455026574285"/><sessioninfo id="it.polimi.automata.IntersectionBATest testGetPurelyRegularStates" start="1455026574296" dump="1455026574299"/><sessioninfo id="" start="1455026574311" dump="1455026574312"/><sessioninfo id="it.polimi.automata.IntersectionBATest testAddMixedStateNull" start="1455026574324" dump="1455026574327"/><sessioninfo id="" start="1455026574339" dump="1455026574340"/><sessioninfo id="it.polimi.automata.IntersectionBATest testAddMixedState" start="1455026574351" dump="1455026574353"/><sessioninfo id="" start="1455026574364" dump="1455026574365"/><sessioninfo id="it.polimi.automata.IntersectionBATest testAddConstrainedTransition" start="1455026574377" dump="1455026574379"/><sessioninfo id="" start="1455026574391" dump="1455026574391"/><sessioninfo id="it.polimi.automata.IntersectionBATest testAddMixedStateNotContainedInTheIBA" start="1455026574403" dump="1455026574406"/><sessioninfo id="" start="1455026574418" dump="1455026574419"/><sessioninfo id="it.polimi.automata.IntersectionBATest testRemove" start="1455026574431" dump="1455026574434"/><sessioninfo id="" start="1455026574445" dump="1455026574446"/><sessioninfo id="it.polimi.automata.IntersectionBATest testRemove_MixedStates" start="1455026574462" dump="1455026574465"/><sessioninfo id="" start="1455026574475" dump="1455026574475"/><sessioninfo id="it.polimi.automata.IntersectionBATest testGetAbstraction" start="1455026574483" dump="1455026574486"/><sessioninfo id="" start="1455026574494" dump="1455026574494"/><sessioninfo id="it.polimi.automata.IntersectionBATest testGetAbstraction_Transition" start="1455026574502" dump="1455026574506"/><sessioninfo id="" start="1455026574517" dump="1455026574518"/><sessioninfo id="it.polimi.automata.IntersectionBATest testRemoveNotTransition" start="1455026574530" dump="1455026574536"/><sessioninfo id="it.polimi.automata.IntersectionBATest testRemoveNotTransition" start="1455026574549" dump="1455026574558"/><package name="it/polimi/automata/state"><class name="it/polimi/automata/state/IntersectionStateFactory"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lit/polimi/automata/state/State;Lit/polimi/automata/state/State;I)Lit/polimi/automata/state/State;" line="39"><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="it/polimi/automata/state/StateFactory"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lit/polimi/automata/state/State;" line="26"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lit/polimi/automata/state/State;" line="46"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;I)Lit/polimi/automata/state/State;" line="72"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createVertex" desc="()Lit/polimi/automata/state/State;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="68"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="it/polimi/automata/state/AbstractStateFactory"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="it/polimi/automata/state/State"><method name="&lt;init&gt;" desc="(I)V" line="40"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="59"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()I" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="102"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="116"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lit/polimi/automata/state/State;" line="134"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractStateFactory.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StateFactory.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="1" cb="1"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="1" cb="1"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="2"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="1" cb="1"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="68"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="State.java"><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="2"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="2"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="13" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="2"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntersectionStateFactory.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="4"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="21" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="1" cb="1"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="8" covered="228"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="4" covered="60"/><counter type="COMPLEXITY" missed="4" covered="26"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="4"/></package><package name="it/polimi/automata/transition"><class name="it/polimi/automata/transition/ModelTransitionFactory"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/Set;)Lit/polimi/automata/transition/Transition;" line="31"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(ILjava/util/Set;)Lit/polimi/automata/transition/Transition;" line="49"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="it/polimi/automata/transition/PropositionalLogicConstants"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="it/polimi/automata/transition/Transition"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;I)V" line="66"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropositions" desc="()Ljava/util/Set;" line="89"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="127"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="144"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="153"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="5" covered="36"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="it/polimi/automata/transition/ClaimTransitionFactory"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lit/polimi/automata/transition/Transition;" line="34"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/Set;)Lit/polimi/automata/transition/Transition;" line="48"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(ILjava/util/Set;)Lit/polimi/automata/transition/Transition;" line="64"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="67"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ClaimTransitionFactory.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="1" cb="1"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="1" cb="1"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="2"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="1" cb="1"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="67"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModelTransitionFactory.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="2"/><line nr="34" mi="0" ci="8" mb="0" cb="2"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="2"/><line nr="53" mi="0" ci="8" mb="0" cb="2"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropositionalLogicConstants.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Transition.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="2"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="2"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="11" mb="0" cb="2"/><line nr="110" mi="0" ci="12" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="2"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="17" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="153"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="5" covered="36"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="21" covered="285"/><counter type="BRANCH" missed="3" covered="31"/><counter type="LINE" missed="8" covered="67"/><counter type="COMPLEXITY" missed="4" covered="29"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="4"/></package><package name="it/polimi/automata"><class name="it/polimi/automata/IntersectionBA"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMixedState" desc="(Lit/polimi/automata/state/State;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMixedStates" desc="()Ljava/util/Set;" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addConstrainedTransition" desc="(Lit/polimi/automata/state/State;Lit/polimi/automata/state/State;Lit/polimi/automata/transition/Transition;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeTransition" desc="(Lit/polimi/automata/transition/Transition;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeState" desc="(Lit/polimi/automata/state/State;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPurelyRegularStates" desc="()Ljava/util/Set;" line="138"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lit/polimi/automata/IntersectionBA;" line="151"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbstraction" desc="(Ljava/util/Set;)Lit/polimi/automata/IntersectionBA;" line="187"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstrainedTransitions" desc="()Ljava/util/Set;" line="218"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="226"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="279"/><counter type="BRANCH" missed="0" covered="32"/><counter type="LINE" missed="0" covered="66"/><counter type="COMPLEXITY" missed="0" covered="27"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="it/polimi/automata/IBA"><method name="&lt;init&gt;" desc="(Lit/polimi/automata/transition/TransitionFactory;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBlackBox" desc="(Lit/polimi/automata/state/State;)Z" line="58"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlackBoxStates" desc="()Ljava/util/Set;" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegularStates" desc="()Ljava/util/Set;" line="82"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBlackBoxState" desc="(Lit/polimi/automata/state/State;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lit/polimi/automata/IBA;" line="117"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeState" desc="(Lit/polimi/automata/state/State;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="164"><counter type="INSTRUCTION" missed="0" covered="148"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="330"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="59"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="it/polimi/automata/BA"><method name="&lt;init&gt;" desc="(Lit/polimi/automata/transition/TransitionFactory;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInitialStates" desc="()Ljava/util/Set;" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStates" desc="()Ljava/util/Set;" line="98"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAcceptStates" desc="()Ljava/util/Set;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropositions" desc="()Ljava/util/Set;" line="116"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTransitions" desc="()Ljava/util/Set;" line="125"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOutTransitions" desc="(Lit/polimi/automata/state/State;)Ljava/util/Set;" line="143"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInTransitions" desc="(Lit/polimi/automata/state/State;)Ljava/util/Set;" line="170"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTransitionDestination" desc="(Lit/polimi/automata/transition/Transition;)Lit/polimi/automata/state/State;" line="196"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTransitionSource" desc="(Lit/polimi/automata/transition/Transition;)Lit/polimi/automata/state/State;" line="222"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuccessors" desc="(Lit/polimi/automata/state/State;)Ljava/util/Set;" line="247"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredecessors" desc="(Lit/polimi/automata/state/State;)Ljava/util/Set;" line="268"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInitialState" desc="(Lit/polimi/automata/state/State;)V" line="287"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInitialStates" desc="(Ljava/util/Set;)V" line="306"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAcceptState" desc="(Lit/polimi/automata/state/State;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAcceptStates" desc="(Ljava/util/Set;)V" line="343"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addState" desc="(Lit/polimi/automata/state/State;)V" line="362"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStates" desc="(Ljava/util/Set;)V" line="388"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addProposition" desc="(Lrwth/i2/ltl2ba4j/model/IGraphProposition;)V" line="409"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPropositions" desc="(Ljava/util/Set;)V" line="430"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTransition" desc="(Lit/polimi/automata/state/State;Lit/polimi/automata/state/State;Lit/polimi/automata/transition/Transition;)V" line="464"><counter type="INSTRUCTION" missed="43" covered="92"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="7" covered="21"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPredecessor" desc="(Lit/polimi/automata/state/State;Lit/polimi/automata/state/State;)Z" line="533"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeState" desc="(Lit/polimi/automata/state/State;)V" line="563"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeTransition" desc="(Lit/polimi/automata/transition/Transition;)V" line="590"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAcceptingState" desc="(Lit/polimi/automata/state/State;)V" line="615"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInitialState" desc="(Lit/polimi/automata/state/State;)V" line="641"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="657"><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lit/polimi/automata/BA;" line="683"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTransitions" desc="(Lit/polimi/automata/state/State;Lit/polimi/automata/state/State;)Ljava/util/Set;" line="719"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuccessor" desc="(Lit/polimi/automata/state/State;Lit/polimi/automata/state/State;)Z" line="753"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStuttering" desc="(Lit/polimi/automata/state/State;)V" line="780"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTransitionFactory" desc="()Lit/polimi/automata/transition/TransitionFactory;" line="805"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lorg/jgrapht/DirectedGraph;" line="815"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="827"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="891"/><counter type="BRANCH" missed="2" covered="28"/><counter type="LINE" missed="7" covered="198"/><counter type="COMPLEXITY" missed="2" covered="47"/><counter type="METHOD" missed="0" covered="34"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IBA.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="2"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="2"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="11" mb="0" cb="2"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="11" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="2"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="11" mb="0" cb="2"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="11" mb="0" cb="2"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="12" mb="0" cb="0"/><line nr="167" mi="0" ci="15" mb="0" cb="0"/><line nr="168" mi="0" ci="14" mb="0" cb="0"/><line nr="169" mi="0" ci="14" mb="0" cb="0"/><line nr="170" mi="0" ci="14" mb="0" cb="0"/><line nr="171" mi="0" ci="9" mb="0" cb="0"/><line nr="172" mi="0" ci="12" mb="0" cb="2"/><line nr="173" mi="0" ci="13" mb="0" cb="0"/><line nr="174" mi="0" ci="13" mb="0" cb="2"/><line nr="175" mi="0" ci="13" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="9" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="330"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="59"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BA.java"><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="13" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="13" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="13" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="13" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="15" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="7" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="10" mb="0" cb="2"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="2"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="10" mb="0" cb="2"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="349" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="367" mi="0" ci="17" mb="0" cb="2"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="1" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="10" mb="0" cb="2"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="0" cb="0"/><line nr="411" mi="0" ci="8" mb="0" cb="2"/><line nr="414" mi="0" ci="5" mb="0" cb="0"/><line nr="415" mi="0" ci="1" mb="0" cb="0"/><line nr="430" mi="0" ci="4" mb="0" cb="0"/><line nr="432" mi="0" ci="10" mb="0" cb="2"/><line nr="433" mi="0" ci="3" mb="0" cb="0"/><line nr="434" mi="0" ci="1" mb="0" cb="0"/><line nr="435" mi="0" ci="1" mb="0" cb="0"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="469" mi="0" ci="11" mb="0" cb="2"/><line nr="470" mi="0" ci="3" mb="1" cb="1"/><line nr="471" mi="3" ci="0" mb="0" cb="0"/><line nr="472" mi="4" ci="0" mb="0" cb="0"/><line nr="473" mi="1" ci="0" mb="0" cb="0"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="475" mi="13" ci="0" mb="0" cb="0"/><line nr="479" mi="1" ci="0" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="481" mi="0" ci="1" mb="0" cb="0"/><line nr="482" mi="0" ci="13" mb="0" cb="0"/><line nr="487" mi="0" ci="1" mb="0" cb="0"/><line nr="488" mi="0" ci="1" mb="0" cb="0"/><line nr="489" mi="0" ci="1" mb="0" cb="0"/><line nr="490" mi="0" ci="13" mb="0" cb="0"/><line nr="494" mi="0" ci="1" mb="0" cb="0"/><line nr="495" mi="0" ci="1" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="0"/><line nr="499" mi="0" ci="1" mb="0" cb="0"/><line nr="500" mi="0" ci="1" mb="0" cb="0"/><line nr="501" mi="0" ci="17" mb="0" cb="2"/><line nr="505" mi="0" ci="7" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="1" cb="1"/><line nr="509" mi="20" ci="0" mb="0" cb="0"/><line nr="514" mi="0" ci="1" mb="0" cb="0"/><line nr="533" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="0" ci="4" mb="0" cb="0"/><line nr="536" mi="0" ci="1" mb="0" cb="0"/><line nr="537" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="1" mb="0" cb="0"/><line nr="540" mi="0" ci="5" mb="0" cb="0"/><line nr="542" mi="0" ci="6" mb="0" cb="0"/><line nr="563" mi="0" ci="4" mb="0" cb="0"/><line nr="564" mi="0" ci="3" mb="0" cb="0"/><line nr="565" mi="0" ci="1" mb="0" cb="0"/><line nr="566" mi="0" ci="7" mb="0" cb="0"/><line nr="568" mi="0" ci="5" mb="0" cb="0"/><line nr="571" mi="0" ci="5" mb="0" cb="0"/><line nr="572" mi="0" ci="5" mb="0" cb="0"/><line nr="573" mi="0" ci="5" mb="0" cb="0"/><line nr="574" mi="0" ci="1" mb="0" cb="0"/><line nr="590" mi="0" ci="4" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="0" ci="1" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="0" cb="0"/><line nr="597" mi="0" ci="5" mb="0" cb="0"/><line nr="598" mi="0" ci="1" mb="0" cb="0"/><line nr="615" mi="0" ci="4" mb="0" cb="0"/><line nr="616" mi="0" ci="3" mb="0" cb="0"/><line nr="617" mi="0" ci="1" mb="0" cb="0"/><line nr="618" mi="0" ci="7" mb="0" cb="0"/><line nr="620" mi="0" ci="5" mb="0" cb="0"/><line nr="623" mi="0" ci="5" mb="0" cb="0"/><line nr="624" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="0" ci="4" mb="0" cb="0"/><line nr="642" mi="0" ci="3" mb="0" cb="0"/><line nr="643" mi="0" ci="1" mb="0" cb="0"/><line nr="644" mi="0" ci="7" mb="0" cb="0"/><line nr="646" mi="0" ci="5" mb="0" cb="0"/><line nr="649" mi="0" ci="5" mb="0" cb="0"/><line nr="650" mi="0" ci="1" mb="0" cb="0"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="659" mi="0" ci="12" mb="0" cb="0"/><line nr="660" mi="0" ci="15" mb="0" cb="0"/><line nr="661" mi="0" ci="14" mb="0" cb="0"/><line nr="662" mi="0" ci="14" mb="0" cb="0"/><line nr="663" mi="0" ci="9" mb="0" cb="0"/><line nr="664" mi="0" ci="12" mb="0" cb="2"/><line nr="665" mi="0" ci="13" mb="0" cb="0"/><line nr="666" mi="0" ci="13" mb="0" cb="2"/><line nr="667" mi="0" ci="13" mb="0" cb="0"/><line nr="668" mi="0" ci="4" mb="0" cb="0"/><line nr="669" mi="0" ci="1" mb="0" cb="0"/><line nr="670" mi="0" ci="9" mb="0" cb="0"/><line nr="672" mi="0" ci="1" mb="0" cb="0"/><line nr="673" mi="0" ci="2" mb="0" cb="0"/><line nr="683" mi="0" ci="4" mb="0" cb="0"/><line nr="685" mi="0" ci="4" mb="0" cb="0"/><line nr="687" mi="0" ci="4" mb="0" cb="0"/><line nr="689" mi="0" ci="4" mb="0" cb="0"/><line nr="691" mi="0" ci="4" mb="0" cb="0"/><line nr="693" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="11" mb="0" cb="2"/><line nr="695" mi="0" ci="7" mb="0" cb="0"/><line nr="696" mi="0" ci="2" mb="0" cb="0"/><line nr="697" mi="0" ci="1" mb="0" cb="0"/><line nr="698" mi="0" ci="2" mb="0" cb="0"/><line nr="719" mi="0" ci="4" mb="0" cb="0"/><line nr="720" mi="0" ci="4" mb="0" cb="0"/><line nr="722" mi="0" ci="3" mb="0" cb="0"/><line nr="723" mi="0" ci="3" mb="0" cb="0"/><line nr="725" mi="0" ci="3" mb="0" cb="0"/><line nr="726" mi="0" ci="3" mb="0" cb="0"/><line nr="728" mi="0" ci="3" mb="0" cb="0"/><line nr="729" mi="0" ci="3" mb="0" cb="0"/><line nr="731" mi="0" ci="6" mb="0" cb="0"/><line nr="732" mi="0" ci="2" mb="0" cb="0"/><line nr="753" mi="0" ci="4" mb="0" cb="0"/><line nr="754" mi="0" ci="4" mb="0" cb="0"/><line nr="756" mi="0" ci="3" mb="0" cb="0"/><line nr="757" mi="0" ci="3" mb="0" cb="0"/><line nr="759" mi="0" ci="3" mb="0" cb="0"/><line nr="760" mi="0" ci="3" mb="0" cb="0"/><line nr="763" mi="0" ci="6" mb="0" cb="0"/><line nr="780" mi="0" ci="4" mb="0" cb="0"/><line nr="781" mi="0" ci="1" mb="0" cb="0"/><line nr="782" mi="0" ci="1" mb="0" cb="0"/><line nr="783" mi="0" ci="13" mb="0" cb="0"/><line nr="787" mi="0" ci="4" mb="0" cb="0"/><line nr="788" mi="0" ci="8" mb="0" cb="0"/><line nr="790" mi="0" ci="3" mb="0" cb="0"/><line nr="791" mi="0" ci="2" mb="0" cb="0"/><line nr="792" mi="0" ci="5" mb="0" cb="0"/><line nr="793" mi="0" ci="5" mb="0" cb="0"/><line nr="795" mi="0" ci="1" mb="0" cb="0"/><line nr="805" mi="0" ci="2" mb="0" cb="0"/><line nr="806" mi="0" ci="3" mb="0" cb="0"/><line nr="815" mi="0" ci="6" mb="0" cb="0"/><line nr="827" mi="0" ci="6" mb="0" cb="0"/><line nr="828" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="891"/><counter type="BRANCH" missed="2" covered="28"/><counter type="LINE" missed="7" covered="198"/><counter type="COMPLEXITY" missed="2" covered="47"/><counter type="METHOD" missed="0" covered="34"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntersectionBA.java"><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="2"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="2"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="2"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="11" mb="0" cb="2"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="11" mb="0" cb="2"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="2"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="2"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="2"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="11" mb="0" cb="2"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="10" mb="0" cb="2"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="2"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="2"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="2"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="11" mb="0" cb="2"/><line nr="204" mi="0" ci="9" mb="0" cb="2"/><line nr="205" mi="0" ci="2" mb="0" cb="2"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="14" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="279"/><counter type="BRANCH" missed="0" covered="32"/><counter type="LINE" missed="0" covered="66"/><counter type="COMPLEXITY" missed="0" covered="27"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="43" covered="1500"/><counter type="BRANCH" missed="2" covered="80"/><counter type="LINE" missed="7" covered="323"/><counter type="COMPLEXITY" missed="2" covered="92"/><counter type="METHOD" missed="0" covered="53"/><counter type="CLASS" missed="0" covered="3"/></package><counter type="INSTRUCTION" missed="72" covered="2013"/><counter type="BRANCH" missed="9" covered="133"/><counter type="LINE" missed="19" covered="450"/><counter type="COMPLEXITY" missed="10" covered="147"/><counter type="METHOD" missed="1" covered="85"/><counter type="CLASS" missed="0" covered="11"/></report>