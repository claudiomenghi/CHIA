<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>CHIA</artifactId>

	<groupId>it.polimi.chia</groupId>
	<version>0.0.1-SNAPSHOT</version>
	<name>CHIA</name>
	<packaging>pom</packaging>

	<properties>
		<!-- specifies the version of Java used in the CHIAChecker -->
		<java.version>1.7</java.version>
		<!-- is the character encoding of the source code -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>
		<!-- sonar -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.language>java</sonar.language>
		<sonar.host.url> http://localhost:9000/ </sonar.host.url>
		<jacoco.version>0.7.2.201409121644</jacoco.version>
		<surefire.version>2.17</surefire.version>
		<testng.version>6.8.8</testng.version>
	</properties>
	<build>

		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.17</version>
					<configuration>
						<runOrder>random</runOrder>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.3</version>
					<configuration>
					</configuration>
					<executions>
						<execution>
							<id>aggregate</id>
							<goals>
								<goal>aggregate</goal>
							</goals>
							<phase>site</phase>
							<configuration>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.5,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<!-- m2e doesn't know what to do with jacoco, let's ignore it or 
											annoying error markers appear see http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>

		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>

				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 
						'deploy' phase -->
					<execution>
						<id>maven_deploy</id>
						<configuration>
							<merge>true</merge>
							<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
							<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
							<outputDirectory>${user.dir}/target/mvn-repo/</outputDirectory>
							<!-- <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> --> <!-- matches distribution management repository url above -->
							<branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
							<includes>
								<include>**/*</include>
							</includes>
							<repositoryName>CHIA</repositoryName>      <!-- github repo name -->
							<repositoryOwner>claudiomenghi</repositoryOwner>    <!-- github username -->
						</configuration>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
					<execution>
						<id>javadoc_deploy</id>

						<configuration>
							<merge>false</merge>
							<message>Javadocs for ${project.name}
								${project.version}-b${buildNumber}</message>
							<outputDirectory>${user.dir}/target/site</outputDirectory>
							<branch>refs/heads/gh-pages</branch>
							<includes>
								<include>**/*</include>
							</includes>
							<path></path>
							<repositoryName>CHIA</repositoryName>
							<repositoryOwner>claudiomenghi</repositoryOwner>
						</configuration>
						<phase>site</phase>
						<goals>
							<goal>site</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${user.dir}/target/mvn-repo/</altDeploymentRepository>
					<!-- <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- same configuration as in the regular test execution goal -->
					<!-- plus argLine parameter configured by JaCoCo prepare-agent -->
					<argLine>${argLine} -XX:-UseSplitVerifier</argLine>
					<includes>
						<include>**/*Test.java</include>
						<include>**/*Tests.java</include>
					</includes>
					<excludes>
						<exclude>**/it/*IT.java</exclude>
					</excludes>
					<!-- new configuration needed for coverage per test -->
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
				</configuration>
			</plugin>


		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

	<repositories>
		<repository>
			<id>deib-polimi-releases</id>
			<url>https://github.com/deib-polimi/deib-polimi-mvn-repo/raw/master/releases</url>
		</repository>
		<repository>
			<id>CHIA</id>
			<url>https://github.com/claudiomenghi</url>
		</repository>
	</repositories>

	<dependencies>

		<!-- is the version of junit using in the software test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>

		<!-- is the mocking library used in the testing activity -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.10.19</version>
		</dependency>


		<!-- slf4j 4j no operations -->
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-nop</artifactId> 
			<version>1.7.10</version> </dependency> -->

		<!-- JGraph the library upon which CHIA is based -->
		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-core</artifactId>
			<version>0.9.1</version>
		</dependency>
		<!-- Is the library which is used to load the BA from the LTL formula -->
		<dependency>
			<groupId>tl2ba4josgi</groupId>
			<artifactId>tl2ba4josgi</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.javabits.jgrapht</groupId>
			<artifactId>jgrapht-core</artifactId>
			<version>0.9.1</version>
		</dependency>
		<dependency>
			<groupId>jgraph</groupId>
			<artifactId>jgraph</artifactId>
			<version>5.13.0.0</version>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.2</version>
		</dependency>
		<!-- is the library used for logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

	</dependencies>
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<!-- Default configuration for all reports -->
				</configuration>
				<reportSets>
					<reportSet>
						<id>non-aggregate</id>
						<configuration>
							<!-- Specific configuration for the non aggregate report -->
						</configuration>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>aggregate</id>
						<configuration>
							<!-- Specific configuration for the aggregate report -->
						</configuration>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
	<modules>
		<module>CHIAAction</module>
		<module>CHIAAutomata</module>
		<module>CHIAAutomataIO</module>
		<module>CHIAChecker</module>
		<module>CHIAConstraint</module>
		<module>CHIAConstraintComputation</module>
		<module>CHIAConstraintIO</module>
		<module>CHIAFramework</module>
		<module>CHIAReplacementChecker</module>
		<module>CHIAScalabilityEvaluator</module>
		<module>CHIALTLIO</module>

		<!-- <module>CHIAVisualization</module> -->

		<module>CHIALogging</module>
	</modules>
</project>