<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>CHIAChecker</artifactId>
	<packaging>jar</packaging>
	<name>CHIAChecker</name>
	<url>http://maven.apache.org</url>

	<parent>
		<groupId>it.polimi.chia</groupId>
		<artifactId>CHIA</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

		<build>
		<!-- contains the directory where the source code is placed -->
		<sourceDirectory>src/main/java</sourceDirectory>
		<!-- contains the directory where the test cases are located -->
		<testSourceDirectory>src/test/java</testSourceDirectory>

		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.1</version>
					<configuration>
						<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<runOrder>random</runOrder>
					</configuration>
				</plugin>
				
			</plugins>
		</pluginManagement>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>

				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- EXAMPLE FOR MYSQL -->
				<sonar.jdbc.url>
					jdbc:mysql://localhost:3306/sonar?useUnicode=true&amp;characterEncoding=utf8
				</sonar.jdbc.url>
				<sonar.jdbc.driverClassName>com.mysql.jdbc.Driver</sonar.jdbc.driverClassName>
				<sonar.jdbc.username>sonar</sonar.jdbc.username>
				<sonar.jdbc.password>sonar</sonar.jdbc.password>

				<!-- optional URL to server. Default value is http://localhost:9000 -->
				<sonar.host.url>
					http://localhost:9000/
				</sonar.host.url>
				<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<!-- same configuration as in the regular test execution goal -->
							<!-- plus argLine parameter configured by JaCoCo prepare-agent -->
							<argLine>${argLine} -XX:-UseSplitVerifier</argLine>
							<includes>
								<include>**/*Test.java</include>
								<include>**/*Tests.java</include>
							</includes>
							<excludes>
								<exclude>**/it/*IT.java</exclude>
							</excludes>
							<!-- new configuration needed for coverage per test -->
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.github.github</groupId>
						<artifactId>site-maven-plugin</artifactId>
						<version>0.10</version>
						<configuration>
							<merge>true</merge>
							<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
							<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
							<outputDirectory>${user.dir}/target/mvn-repo</outputDirectory>
							<!-- <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> --> <!-- matches distribution management repository url above -->
							<branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
							<includes>
								<include>**/*</include>
							</includes>
							<repositoryName>CHIA</repositoryName>      <!-- github repo name -->
							<repositoryOwner>claudiomenghi</repositoryOwner>    <!-- github username -->
						</configuration>
						<executions>
							<!-- run site-maven-plugin's 'site' target as part of the build's 
								normal 'deploy' phase -->
							<execution>
								<goals>
									<goal>site</goal>
								</goals>
								<phase>deploy</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<archive>
								<manifest>
									<mainClass>
										it.polimi.Main
									</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
				<resources>
					<resource>
						<directory>src/test/resources</directory>
					</resource>
				</resources>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.codehaus.sonar-plugins.java</groupId>
					<artifactId>sonar-jacoco-listeners</artifactId>
					<version>2.3</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>CHIA</id>
			<url>https://github.com/claudiomenghi</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>deib-polimi-releases</id>
			<url>https://github.com/deib-polimi/deib-polimi-mvn-repo/raw/master/releases</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>
	<dependencies>
		<dependency>
			<groupId>it.polimi.chia</groupId>
			<artifactId>CHIAAutomata</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>it.polimi.chia</groupId>
			<artifactId>CHIAAction</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>it.polimi.chia</groupId>
			<artifactId>CHIAAutomataIO</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.2</version>
		</dependency>
		<dependency>
			<groupId>it.polimi.chia</groupId>
			<artifactId>CHIALTLIO</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>it.polimi.chia</groupId>
			<artifactId>CHIALogging</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>
</project>
