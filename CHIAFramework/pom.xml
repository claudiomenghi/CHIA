<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>it.polimi.chia</groupId>
		<artifactId>CHIA</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<packaging>jar</packaging>
	<artifactId>CHIAFramework</artifactId>
	<name>CHIAFramework</name>
	<url>http://maven.apache.org</url>
	<properties>
		<!-- specifies the version of Java used in the CHIAChecker -->
		<java.version>1.7</java.version>
		<!-- is the character encoding of the source code -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>
		<!-- sonar -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.language>java</sonar.language>
		<sonar.host.url> http://localhost:9000/ </sonar.host.url>
		<jacoco.version>0.7.2.201409121644</jacoco.version>
		<surefire.version>2.17</surefire.version>
		<testng.version>6.8.8</testng.version>
		<jdk.version>1.7</jdk.version>
	</properties>
	<build>
		<!-- contains the directory where the source code is placed -->
		<sourceDirectory>src/main/java</sourceDirectory>
		<!-- contains the directory where the test cases are located -->
		<testSourceDirectory>src/test/java</testSourceDirectory>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>${project.build.directory}</targetPath>
				<includes>
					<include>History.txt</include>
					<include>log4j.properties</include>
					<include>logFile.log</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>${basedir}/target/classes</targetPath>
				<includes>
					<include>History.txt</include>
					<include>log4j.properties</include>
					<include>logFile.log</include>
				</includes>
				<filtering>false</filtering>
			</resource>

		</resources>

		<plugins>
			<!-- Set a compiler level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<mainClass>it.polimi.CHIA</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>it.polimi.CHIA</mainClass>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>it.polimi.CHIA</mainClass>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--This plugin's configuration is used to store Eclipse m2e settings 
				only. It has no influence on the Maven build itself. -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>

				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
						<archive>
							<manifest>
								<mainClass>it.polimi.CHIA</mainClass>
							</manifest>
							<manifestEntries>
								<Class-Path>.</Class-Path>
							</manifestEntries>
						</archive>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- EXAMPLE FOR MYSQL -->
				<sonar.jdbc.url>
					jdbc:mysql://localhost:3306/sonar?useUnicode=true&amp;characterEncoding=utf8
				</sonar.jdbc.url>
				<sonar.jdbc.driverClassName>com.mysql.jdbc.Driver</sonar.jdbc.driverClassName>
				<sonar.jdbc.username>sonar</sonar.jdbc.username>
				<sonar.jdbc.password>sonar</sonar.jdbc.password>
				<!-- optional URL to server. Default value is http://localhost:9000 -->
				<sonar.host.url>
					http://localhost:9000/
				</sonar.host.url>
				<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.github</groupId>
						<artifactId>site-maven-plugin</artifactId>
						<version>0.10</version>
						<configuration>
							<merge>true</merge>
							<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
							<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
							<outputDirectory>${user.dir}/target/mvn-repo</outputDirectory>
							<!-- <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> --> <!-- matches distribution management repository url above -->
							<branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
							<includes>
								<include>**/*</include>
							</includes>
							<repositoryName>IncompleteAutomataBasedModelChecking</repositoryName>      <!-- github repo name -->
							<repositoryOwner>claudiomenghi</repositoryOwner>    <!-- github username -->
						</configuration>
						<executions>
							<!-- run site-maven-plugin's 'site' target as part of the build's 
								normal 'deploy' phase -->
							<execution>
								<goals>
									<goal>site</goal>
								</goals>
								<phase>deploy</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.8.1</version>
						<configuration>
							<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
						</configuration>
					</plugin>
				</plugins>
				<resources>
					<resource>
						<directory>src/test/resources</directory>
					</resource>
				</resources>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.codehaus.sonar-plugins.java</groupId>
					<artifactId>sonar-jacoco-listeners</artifactId>
					<version>2.3</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>it.polimi.chia</groupId>
			<artifactId>CHIAChecker</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>it.polimi.chia</groupId>
			<artifactId>CHIAConstraintIO</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>it.polimi.chia</groupId>
			<artifactId>CHIAConstraintComputation</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>it.polimi.chia</groupId>
			<artifactId>CHIAAutomata</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>it.polimi.chia</groupId>
			<artifactId>CHIAReplacementChecker</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>jline</groupId>
			<artifactId>jline</artifactId>
			<version>2.13</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.clichemaven</groupId>
			<artifactId>cliche</artifactId>
			<version>110413</version>
		</dependency>

	</dependencies>
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>
</project>
